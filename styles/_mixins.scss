@use "sass:color";
@import "./variables";

/* -------------------- */
// Fonts

$line-height: 1.13;

// Fonts - Display
@mixin displayFont {
  font-family: $chakra;
  font-weight: 600;
  line-height: $line-height;
}

@mixin hasDisplay1FontSize {
  @include displayFont;
  font-size: 64px;
  @include bpMedium {
    font-size: 80px;
  }
}
@mixin hasDisplay2FontSize {
  @include displayFont;
  font-size: 56px;
  @include bpMedium {
    font-size: 72px;
  }
}
@mixin hasDisplay3FontSize {
  @include displayFont;
  font-size: 48px;
  @include bpMedium {
    font-size: 64px;
  }
}
@mixin hasDisplay4FontSize {
  @include displayFont;
  font-size: 40px;
  @include bpMedium {
    font-size: 56px;
  }
}
@mixin hasDisplay5FontSize {
  @include displayFont;
  font-size: 32px;
  @include bpMedium {
    font-size: 48px;
  }
}
@mixin hasDisplay6FontSize {
  @include displayFont;
  font-size: 24px;
  @include bpMedium {
    font-size: 40px;
  }
}

// Fonts - Body
@mixin bodyFont {
  font-family: $openSans;
  font-weight: 400;
  line-height: 1.5;
}
@mixin hasBodyFontSize {
  @include bodyFont;
  font-size: 18px;
}

@mixin hasBodySmallFontSize {
  @include bodyFont;
  font-size: 14px;
}

@mixin hasEyebrowFontSize {
  @include bodyFont;
  font-family: $inter;
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
}

// Fonts - Other

@mixin hasSubtitleFontSize {
  @include displayFont;
  font-weight: 500;
  font-size: 20px;
  @include bpMedium {
    font-size: 24px;
  }
}

/* -------------------- */
// Breakpoints

/**
 * Sets a media query for the specified breakpoint
 *
 * Accepts:
 * - $media-query: {String} Breakpoint variable (list found in variables.scss)
 *
 * Usage:
 * .selector {
 *   @include media-query($medium-up) {
 *     color: red;
 *   }
 * }
 */
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);
    @if $media-query == $name and $declaration {
      $breakpoint-found: true;
      @media screen and #{$declaration} {
        @content;
      }
    }
  }
}

@mixin bpSmall {
  @media screen and (max-width: $breakpointMobile) {
    @content;
  }
}

@mixin bpMedium {
  @media screen and (min-width: #{$breakpointTablet + 1px}) {
    @content;
  }
}

@mixin bpLarge {
  @media screen and (min-width: #{$breakpointDesktop + 1px}) {
    @content;
  }
}

@mixin bpXLarge {
  @media screen and (min-width: #{$maxWidth + 1px}) {
    @content;
  }
}

@mixin mobileOnly {
  @media screen and (max-width: $breakpointTablet) {
    @content;
  }
}

@mixin tabletOnly {
  @media screen and (min-width: #{$breakpointTablet + 1px}) and (max-width: #{$breakpointDesktop}) {
    @content;
  }
}

/* -------------------- */
// Buttons

@mixin onHover {
  &:hover {
    body:not(body.touch) & {
      @content;
    }
  }

  &.hover {
    @content;
  }
}

@mixin focus-visible {
  @supports not selector(:focus-visible) {
    &:focus {
      @content;
    }
  }
  &:focus-visible {
    @content;
  }
}